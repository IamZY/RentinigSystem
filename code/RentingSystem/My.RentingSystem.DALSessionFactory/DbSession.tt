<#@ template language="C#" debug="false" hostspecific="true"#>
<#@ include file="EF.Utility.CS.ttinclude"#><#@
 output extension=".cs"#>
<#
CodeGenerationTools code = new CodeGenerationTools(this);
MetadataLoader loader = new MetadataLoader(this);
CodeRegion region = new CodeRegion(this, 1);
MetadataTools ef = new MetadataTools(this);
string inputFile = @"..\My.RentingSystem.Model\RentingSystem.edmx";
EdmItemCollection ItemCollection = loader.CreateEdmItemCollection(inputFile);
string namespaceName = code.VsNamespaceSuggestion();
EntityFrameworkTemplateFileManager fileManager = EntityFrameworkTemplateFileManager.Create(this);
#>
using My.RentingSystem.DAL;
using My.RentingSystem.IDAL;

namespace My.RentingSystem.DALSessionFactory
{
	public partial class DBSession : IDBSession
    {
<#
foreach (EntityType entity in ItemCollection.GetItems<EntityType>().OrderBy(e => e.Name))
{
#>	
		private I<#=entity.Name#>Repository _<#=entity.Name#>Repository;
        public I<#=entity.Name#>Repository I<#=entity.Name#>Repository
        {
            get
            {
                if(_<#=entity.Name#>Repository == null)
                {
                   // _<#=entity.Name#>Repository = new <#=entity.Name#>Repository();
				    _<#=entity.Name#>Repository =DalFactory.Get<#=entity.Name#>Repository;
                }
                return _<#=entity.Name#>Repository;
            }
            set { _<#=entity.Name#>Repository = value; }
        }
<#}#>
	}	
}